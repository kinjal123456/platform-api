<?php

namespace Tests\Unit;

use Tests\TestCase;
use Tests\TestDataFaker;

class UpsellTest extends TestCase
{
    private $faker;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->faker = new TestDataFaker();
    }

    /**
     * New Upsell API unit test (with valid data).
     *
     * @return void
     */
    public function testNewUpsellApiWithValidData()
    {
        $this->json('POST', 'api/upsell/create', $this->faker->prepareNewUpsellValidData(), ['Accept' => 'application/json'])->assertOk()->assertHeader('Content-Type', 'application/json')->assertJsonStructure([
            'error',
            'success',
            'message',
            'apiError',
            'data',
        ])->assertJson([
            'error'   => false,
            'success' => true,
            'message' => __('sticky.new_upsell_create_success'),
            'apiError' => '',
        ]);
    }

    /**
     * New Upsell API unit test (with invalid data).
     *
     * @return void
     */
    public function testNewUpsellApiWithInvalidData()
    {
        $this->json('POST', 'api/upsell/create', $this->faker->prepareNewUpsellInvalidData(), ['Accept' => 'application/json'])->assertOk()->assertHeader('Content-Type', 'application/json')->assertJsonStructure([
            'error',
            'success',
            'message',
            'apiError',
            'data',
        ])->assertJson([
            'error'   => true,
            'success' => false,
            'message' => '',
            'apiError' => 'Could not find original order Id',
        ]);
    }
}
